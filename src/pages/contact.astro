---
import Layout from "../layouts/Layout.astro";

const baseUrl = import.meta.env.BASE_URL;
---

<Layout>
  <main>
    <div class="title-container">
      <h1 class="about-title animate-slide-in" style="animation-delay: 0.4s">Contact Me</h1>
      <p class="animate-slide-in" style="animation-delay: 0.45s; font-size: 1.3rem; opacity: 0;">Whether you're looking to collaborate on a project.</p>
    </div>

    <form class="form-container" id="contact-form">
      <div class="card animate-float-down" style="animation-delay: 0.55s">
        <h2>What's your name?</h2>
        <input type="text" name="name" required placeholder="Your name" />
      </div>
      <div class="card animate-float-down" style="animation-delay: 0.65s">
        <h2>What's your email?</h2>
        <input type="email" name="email" required placeholder="Your email" />
      </div>
      <div class="card animate-float-down" style="animation-delay: 0.75s">
        <h2>What's the name of your organization?</h2>
        <input type="text" name="organization" placeholder="Organization name (optional)" />
      </div>
      <div class="card animate-float-down" style="animation-delay: 0.85s">
        <h2>What do you need help with?</h2>
        <input type="text" name="subject" required placeholder="Brief description of your needs" />
      </div>
      <div class="card animate-float-down" style="animation-delay: 0.95s">
        <h2>Your message</h2>
        <textarea name="message" required placeholder="Your detailed message" rows="4"></textarea>
      </div>
      <div class="form-status animate-float-down" style="animation-delay: 1.05s"></div>
      <button type="submit" class="submit-button animate-float-down" style="animation-delay: 1.05s">
        <span class="button-text">Send Message</span>
        <span class="button-loader">Sending...</span>
      </button>
    </form>
  </main>
</Layout>

<style>
  .title-container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    margin: 8rem 150px 0;
  }

  .about-title {
    font-size: 4rem;
    font-weight: 500;
    color: #d1d1d1;
    opacity: 0;
    margin-bottom: 0;
  }

  .info-section {
    width: 80vw;
    margin: 0 150px;
    opacity: 0;
  }

  .form-container {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    margin: 0 150px;
    flex-wrap: wrap;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    width: 75%;
    padding-bottom: 5rem;
  }

  .card {
    border-top: 1px solid rgba(255, 255, 255, 0.1);
    padding: 1rem;
    width: 100%;
    opacity: 0;
  }

  .card h2 {
    color: #d1d1d1;
    margin-bottom: 1rem;
  }

  .card input,
  .card textarea {
    padding: 0.6rem;
    width: 100%;
    background: rgba(255, 255, 255, 0.02);
    border: 1px solid rgba(255, 255, 255, 0);
    border-radius: 4px;
    color: #d1d1d1;
    font-size: 1rem;
  }

  .card textarea {
    resize: vertical;
  }

  .form-status {
    margin-top: 1rem;
    padding: 1rem;
    border-radius: 4px;
    display: none;
  }

  .form-status.success {
    display: block;
    background: rgba(46, 204, 113, 0.2);
    color: #2ecc71;
  }

  .form-status.error {
    display: block;
    background: rgba(231, 76, 60, 0.2);
    color: #e74c3c;
  }

  .submit-button {
    align-self: flex-end;
    width: auto;
    min-width: 120px;
    padding: 0.8rem 2rem;
    border-radius: 5px;
    background: rgba(255, 255, 255, 0.02);
    border: 1px solid rgba(255, 255, 255, 0.1);
    color: #d1d1d1;
    font-size: 1rem;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
    margin-top: 1rem;
  }

  .submit-button:hover {
    background: rgba(255, 255, 255, 0.05);
    border-color: rgba(255, 255, 255, 0.2);
    transform: translateY(-2px);
  }

  .submit-button:active {
    transform: translateY(0);
  }

  .button-text,
  .button-loader {
    transition: opacity 0.3s ease;
    font-weight: 500;
  }

  .button-loader {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    opacity: 0;
  }

  .submit-button.loading .button-text {
    opacity: 0;
  }

  .submit-button.loading .button-loader {
    opacity: 1;
  }

  input::placeholder,
  textarea::placeholder {
    color: rgba(255, 255, 255, 0.5);
  }

  @keyframes slideIn {
    from {
      opacity: 0;
      transform: translateX(-30px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes floatDown {
    from {
      opacity: 0;
      transform: translateY(-25px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-slide-in {
    animation: slideIn 0.6s cubic-bezier(0.34, 1.56, 0.64, 1) forwards;
  }

  .animate-float-down {
    animation: floatDown 0.6s cubic-bezier(0.34, 1.56, 0.64, 1) forwards;
  }
</style>

<script>
  const form = document.getElementById('contact-form') as HTMLFormElement;
  const status = document.querySelector('.form-status') as HTMLDivElement;
  const submitButton = document.querySelector('.submit-button') as HTMLButtonElement;

  if (form && status && submitButton) {
    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      // Show loading state
      submitButton.classList.add('loading');
      status.style.display = 'none';

      try {
        const response = await fetch('https://formspree.io/f/mgvagwry', {
          method: 'POST',
          body: new FormData(form),
          headers: {
            'Accept': 'application/json'
          }
        });

        if (response.ok) {
          status.textContent = 'Thank you for your message! I\'ll get back to you soon.';
          status.className = 'form-status success';
          form.reset();
        } else {
          throw new Error('Network response was not ok');
        }
      } catch (error) {
        status.textContent = 'Sorry, there was an error sending your message. Please try again later.';
        status.className = 'form-status error';
      } finally {
        submitButton.classList.remove('loading');
        status.style.display = 'block';
      }
    });
  }
</script>

